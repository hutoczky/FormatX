name: Auto-merge Copilot PRs

on:
  pull_request_target:
    types: [opened, ready_for_review, reopened, labeled, synchronize]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  auto-merge-copilot:
    runs-on: ubuntu-latest
    # Only run for PRs from Copilot or branches prefixed with copilot/
    if: >
      github.event.pull_request.user.login == 'copilot' ||
      startsWith(github.event.pull_request.head.ref, 'copilot/')
    steps:
      - name: Check PR eligibility
        id: check
        run: |
          echo "PR is from Copilot or copilot/ branch"
          echo "Author: ${{ github.event.pull_request.user.login }}"
          echo "Head ref: ${{ github.event.pull_request.head.ref }}"
          echo "eligible=true" >> $GITHUB_OUTPUT

      - name: Ensure automerge label exists
        uses: actions/github-script@v7
        with:
          script: |
            try {
              await github.rest.issues.getLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: 'automerge'
              });
              console.log('Label "automerge" already exists');
            } catch (error) {
              if (error.status === 404) {
                await github.rest.issues.createLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  name: 'automerge',
                  color: '0E8A16',
                  description: 'Automatically merge this PR when checks pass'
                });
                console.log('Created label "automerge"');
              } else {
                throw error;
              }
            }

      - name: Add automerge label
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: ['automerge']
            });
            console.log('Added "automerge" label to PR #' + context.issue.number);

      - name: Mark PR as ready for review if draft
        if: github.event.pull_request.draft == true
        uses: actions/github-script@v7
        with:
          script: |
            const mutation = `
              mutation MarkPullRequestReadyForReview($pullRequestId: ID!) {
                markPullRequestReadyForReview(input: {pullRequestId: $pullRequestId}) {
                  pullRequest {
                    id
                    isDraft
                  }
                }
              }
            `;
            
            try {
              const result = await github.graphql(mutation, {
                pullRequestId: context.payload.pull_request.node_id
              });
              console.log('Marked PR as ready for review:', result);
            } catch (error) {
              console.error('Error marking PR as ready:', error);
              throw error;
            }

      - name: Enable auto-merge
        uses: peter-evans/auto-merge@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pull-request-number: ${{ github.event.pull_request.number }}
          merge-method: squash
          commit-message: pull-request-title
          delete-branch: true
          required-labels: automerge
